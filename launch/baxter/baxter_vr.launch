<launch>
  <arg name="main" default="true" />
  <arg name="vive" default="true" />
  <arg name="oculus" default="false" />
  <arg name="head" default="true" />
  <arg name="respeaker" default="true" />
  <arg name="mirror" default="false" />
  <arg name="logging" default="true" />
  <arg name="twitter" default="true" />
  <arg name="debug" default="false" />
  <arg name="mask_rcnn" default="false" />
  <arg name="custom_xdisplay" default="true" />
  <arg name="launch_baxter" default="true" />
  <arg name="republish" default="false" />
  <arg name="lgripper_softhand" default="false" />
  <arg name="rgripper_softhand" default="false" />

  <!-- device -->
  <arg name="device" value=":oculus" if="$(arg oculus)" />
  <arg name="device" value=":vive" unless="$(arg oculus)" />

  <!-- vive -->
  <arg name="b_lighthouse_id" default="" />
  <arg name="c_lighthouse_id" default="" />
  <arg name="l_controller_id" default="" />
  <arg name="r_controller_id" default="" />

  <!-- workspace -->
  <arg name="workspace_max_x" default="false" />
  <arg name="workspace_min_x" default="false" />
  <arg name="workspace_max_y" default="false" />
  <arg name="workspace_min_y" default="false" />
  <arg name="workspace_max_z" default="false" />
  <arg name="workspace_min_z" default="false" />

  <!-- gripper and display-->
  <arg name="finger" default="standard_narrow" />
  <arg name="finger_tip" default="paddle_tip" />
  <arg name="xdisplay_max_width" default="1024" unless="$(arg custom_xdisplay)" />
  <arg name="xdisplay_max_width" default="1920" if="$(arg custom_xdisplay)" />
  <arg name="xdisplay_max_height" default="600" unless="$(arg custom_xdisplay)" />
  <arg name="xdisplay_max_height" default="1200" if="$(arg custom_xdisplay)" />
  <arg name="lgripper_type" value=":softhand" if="$(arg lgripper_softhand)" />
  <arg name="lgripper_type" value=":parallel" unless="$(arg lgripper_softhand)" />
  <arg name="rgripper_type" value=":softhand" if="$(arg rgripper_softhand)" />
  <arg name="rgripper_type" value=":parallel" unless="$(arg rgripper_softhand)" />
  <arg name="lgripper_visualize" value="true" unless="$(arg lgripper_softhand)" />
  <arg name="lgripper_visualize" value="false" if="$(arg lgripper_softhand)" />
  <arg name="rgripper_visualize" value="true" unless="$(arg rgripper_softhand)" />
  <arg name="rgripper_visualize" value="false" if="$(arg rgripper_softhand)" />

  <!-- camera -->
  <arg name="camera_ns" default="realsense_head" />
  <arg name="spherical_camera_ns" default="kodak_head" />
  <arg name="image_left" default="/virtual_camera/left/rviz_image" />
  <arg name="image_right" default="/virtual_camera/right/rviz_image" />

  <!-- launch baxter -->
  <include file="$(find eus_vive)/launch/baxter/baxter.launch" pass_all_args="true" if="$(arg launch_baxter)" />

  <include file="$(find eus_vive)/launch/include/vive.launch" if="$(arg vive)" >
    <arg name="image_left" value="$(arg image_left)" />
    <arg name="image_right" value="$(arg image_right)" />
  </include>

  <group ns="eus_vive" if="$(arg vive)">
    <rosparam subst_value="true">
      b_lighthouse_id: $(arg b_lighthouse_id)
      c_lighthouse_id: $(arg c_lighthouse_id)
      l_controller_id: $(arg l_controller_id)
      r_controller_id: $(arg r_controller_id)
      workspace:
        max_x: $(arg workspace_max_x)
        min_x: $(arg workspace_min_x)
        max_y: $(arg workspace_max_y)
        min_y: $(arg workspace_min_y)
        max_z: $(arg workspace_max_z)
        min_z: $(arg workspace_min_z)
    </rosparam>
  </group>
  <group ns="eus_vive" unless="$(arg vive)">
    <rosparam subst_value="true">
      workspace:
        max_x: $(arg workspace_max_x)
        min_x: $(arg workspace_min_x)
        max_y: $(arg workspace_max_y)
        min_y: $(arg workspace_min_y)
        max_z: $(arg workspace_max_z)
        min_z: $(arg workspace_min_z)
    </rosparam>
  </group>
  <group if="$(arg main)">
    <group if="$(arg mirror)">
      <node if="$(arg head)" pkg="eus_vive" type="baxter-vr-main.l" name="baxter_vr_main"
            args="&quot;(main :head t :mirror t :lgripper $(arg lgripper_type) :rgripper $(arg rgripper_type) :loop-enable nil :device-type $(arg device))&quot;" output="screen" />
      <node unless="$(arg head)" pkg="eus_vive" type="baxter-vr-main.l" name="baxter_vr_main"
            args="&quot;(main :head nil :mirror t :lgripper $(arg lgripper_type) :rgripper $(arg rgripper_type) :loop-enable nil :device-type $(arg device))&quot;" output="screen" />
    </group>
    <group unless="$(arg mirror)">
      <node if="$(arg head)" pkg="eus_vive" type="baxter-vr-main.l" name="baxter_vr_main"
            args="&quot;(main :head t :mirror nil :lgripper $(arg lgripper_type) :rgripper $(arg rgripper_type) :loop-enable nil :device-type $(arg device))&quot;" output="screen" />
      <node unless="$(arg head)" pkg="eus_vive" type="baxter-vr-main.l" name="baxter_vr_main"
            args="&quot;(main :head nil :mirror nil :lgripper $(arg lgripper_type) :rgripper $(arg rgripper_type) :loop-enable nil :device-type $(arg device))&quot;" output="screen" />
    </group>
  </group>

  <node name="rosconsole_overlay_text"
        pkg="jsk_rviz_plugins" type="rosconsole_overlay_text.py">
    <rosparam>
      nodes:
        - /baxter_vr_main
      exclude_regexes:
        - .*follow_joint_trajectory.*
        - .*:joint-angle.*
        - .*:wait-interpolation-until.*
        - ^;;.*
        - if you do not have gripper,.*
    </rosparam>
  </node>

  <node name="eus_vive_status_visualizer"
      pkg="eus_vive" type="eus_vive_status_visualizer.py">
    <remap from="~input/image" to="/eus_vive/irtviewer/image" />
    <remap from="~input/status" to="/eus_vive/status" />
  </node>

  <node name="eus_vive_status_sounder"
      pkg="eus_vive" type="eus_vive_status_sounder.py">
    <remap from="~output/sound" to="/robotsound" />
    <remap from="~input/status" to="/eus_vive/status" />
  </node>

  <node name="irtviewer_xdisplay"
        pkg="jsk_baxter_startup" type="xdisplay_image_topic.py"
        args="/eus_vive_status_visualizer/output/image">
    <rosparam subst_value="true">
      max_width: $(arg xdisplay_max_width)
      max_height: $(arg xdisplay_max_height)
    </rosparam>
  </node>

  <include file="$(find eus_vive)/launch/include/audio_play.launch" if="$(arg respeaker)" />
  <node name="soundplay_node"
        pkg="sound_play" type="soundplay_node.py">
    <remap from="sound_play" to="robotsound" />
  </node>
  <node name="soundplay_jp_node"
        pkg="sound_play" type="soundplay_node.py">
    <remap from="robotsound" to="robotsound_jp" />
    <remap from="sound_play" to="robotsound_jp" />
  </node>

  <group if="$(arg republish)">
    <node name="realsense_rgb_decompress" pkg="image_transport" type="republish"
          args="compressed in:=/$(arg camera_ns)/color/image_rect_color
                           out:=/$(arg camera_ns)_remote/color/image_rect_color" />
    <node name="realsense_depth_decompress" pkg="image_transport" type="republish"
          args="compressedDepth in:=/$(arg camera_ns)/depth/image_rect_raw
                                out:=/$(arg camera_ns)_remote/depth/image_rect_raw" />
    <node name="kodak_decompress" pkg="image_transport" type="republish"
          args="compressed in:=/$(arg spherical_camera_ns)/image_raw
                           out:=/$(arg spherical_camera_ns)_remote/image_raw" />
  </group>

  <include file="$(find eus_vive)/launch/baxter/baxter_logging.launch" if="$(arg logging)">
    <arg name="twitter" value="$(arg twitter)" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="camera_ns" value="$(arg camera_ns)" />
  </include>

  <node name="service_button" pkg="jsk_rqt_plugins" type="rqt_service_buttons">
    <rosparam subst_value="true" >
      layout_yaml_file: file://$(find eus_vive)/resource/reset_button_layout.yaml 
    </rosparam>
  </node>

  <node name="$(anon rviz)" pkg="rviz" type="rviz" if="$(arg head)"
        args="-d $(find eus_vive)/rvizconfig/baxter/baxter_vr_visualization.rviz" />
  <group unless="$(arg head)">
    <node name="$(anon rviz)" pkg="rviz" type="rviz" if="$(arg mirror)"
          args="-d $(find eus_vive)/rvizconfig/baxter/baxter_vr_mirror.rviz" />
    <node name="$(anon rviz)" pkg="rviz" type="rviz" unless="$(arg mirror)"
          args="-d $(find eus_vive)/rvizconfig/baxter/baxter_vr_display_visualization.rviz" />
  </group>
</launch>
