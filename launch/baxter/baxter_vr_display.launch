<launch>
  <arg name="main" default="true" />
  <arg name="vive" default="true" />
  <arg name="oculus" default="false" />
  <arg name="head" default="true" />
  <arg name="respeaker" default="true" />
  <arg name="mirror" default="false" />
  <arg name="logging" default="true" />
  <arg name="twitter" default="true" />
  <arg name="debug" default="false" />
  <arg name="mask_rcnn" default="false" />
  <arg name="display" default="true" />
  <arg name="custom_xdisplay" default="true" />
  <arg name="launch_baxter" default="true" />
  <arg name="launch_xdisplay" default="false" />
  <arg name="realsense_camera" default="false" />
  <arg name="spherical_camera" default="true" />
  <arg name="republish" default="false" />
  <arg name="lgripper_type" default="softhand" />
  <arg name="rgripper_type" default="softhand" />

  <!-- device -->
  <arg name="device" value=":oculus" if="$(arg oculus)" />
  <arg name="device" value=":vive" unless="$(arg oculus)" />

  <!-- vive -->
  <arg name="button_toggle" default="true" />
  <arg name="b_lighthouse_id" default="" />
  <arg name="c_lighthouse_id" default="" />
  <arg name="l_controller_id" default="" />
  <arg name="r_controller_id" default="" />

  <!-- workspace -->
  <arg name="workspace_max_x" default="false" />
  <arg name="workspace_min_x" default="false" />
  <arg name="workspace_max_y" default="false" />
  <arg name="workspace_min_y" default="false" />
  <arg name="workspace_max_z" default="false" />
  <arg name="workspace_min_z" default="false" />

  <!-- gripper and display-->
  <arg name="finger" default="standard_narrow" />
  <arg name="finger_tip" default="paddle_tip" />
  <arg name="xdisplay_max_width" default="1024" unless="$(arg custom_xdisplay)" />
  <arg name="xdisplay_max_width" default="1920" if="$(arg custom_xdisplay)" />
  <arg name="xdisplay_max_height" default="600" unless="$(arg custom_xdisplay)" />
  <arg name="xdisplay_max_height" default="1200" if="$(arg custom_xdisplay)" />
  <arg name="lgripper_visualize" value="true"
       if="$(eval arg('lgripper_type') == 'parallel')" />
  <arg name="lgripper_visualize" value="false"
       if="$(eval arg('lgripper_type') in ['softhand', 'softhand-v2'])" />
  <arg name="rgripper_visualize" value="true"
       if="$(eval arg('rgripper_type') == 'parallel')" />
  <arg name="rgripper_visualize" value="false"
       if="$(eval arg('rgripper_type') in ['softhand', 'softhand-v2'])" />

  <!-- camera -->
  <arg name="camera_ns" default="realsense_head" />
  <arg name="spherical_camera_ns" default="kodak_head" />
  <arg name="image_left" default="/virtual_camera/left/rviz_image" />
  <arg name="image_right" default="/virtual_camera/right/rviz_image" />


  <!-- launch rviz overlay -->
  <node name="rosconsole_overlay_text"
        pkg="jsk_rviz_plugins" type="rosconsole_overlay_text.py">
    <rosparam>
      nodes:
        - /baxter_vr_main
      exclude_regexes:
        - .*follow_joint_trajectory.*
        - .*:joint-angle.*
        - .*:wait-interpolation-until.*
        - ^;;.*
        - if you do not have gripper,.*
    </rosparam>
  </node>

  <!-- launch robot sounder -->
  <node name="eus_vive_status_sounder"
      pkg="eus_vive" type="eus_vive_status_sounder.py">
    <remap from="~output/sound" to="/robotsound" />
    <remap from="~input/status" to="/eus_vive/status" />
  </node>
  <include file="$(find eus_vive)/launch/include/audio_play.launch" if="$(arg respeaker)" />
  <node name="soundplay_node"
        pkg="sound_play" type="soundplay_node.py">
    <remap from="sound_play" to="robotsound" />
  </node>
  <node name="soundplay_jp_node"
        pkg="sound_play" type="soundplay_node.py">
    <remap from="robotsound" to="robotsound_jp" />
    <remap from="sound_play" to="robotsound_jp" />
  </node>

  <!-- launch camera republish-->
  <group if="$(arg republish)">
    <node name="realsense_rgb_decompress" pkg="image_transport" type="republish"
          args="compressed in:=/$(arg camera_ns)/color/image_raw
                           out:=/$(arg camera_ns)_remote/color/image_raw" />
    <node name="realsense_depth_decompress" pkg="image_transport" type="republish"
          args="compressedDepth in:=/$(arg camera_ns)/depth/image_rect_raw
                                out:=/$(arg camera_ns)_remote/depth/image_rect_raw" />
    <node name="kodak_decompress" pkg="image_transport" type="republish"
          args="compressed in:=/$(arg spherical_camera_ns)/image_raw
                           out:=/$(arg spherical_camera_ns)_remote/image_raw" />
  </group>

  <!-- launch rqt_gui -->
  <node name="service_button" pkg="rqt_gui" type="rqt_gui"
        args="--perspective-file $(find eus_vive)/resource/reset_button.perspective" />

  <!-- launch rviz -->
  <group unless="$(arg head)">
    <node name="$(anon vr_rviz)" pkg="rviz" type="rviz" if="$(arg republish)"
          args="-d $(find eus_vive)/rvizconfig/baxter/baxter_vr_remote_hmd_visualization.rviz" />
    <node name="$(anon vr_rviz)" pkg="rviz" type="rviz" unless="$(arg republish)"
          args="-d $(find eus_vive)/rvizconfig/baxter/baxter_vr_hmd_visualization.rviz" />
  </group>
  <group unless="$(arg head)">
    <node name="$(anon vr_rviz)" pkg="rviz" type="rviz" if="$(arg mirror)"
          args="-d $(find eus_vive)/rvizconfig/baxter/baxter_vr_mirror_visualization.rviz" />
    <group unless="$(arg mirror)">
      <node name="$(anon vr_rviz)" pkg="rviz" type="rviz" if="$(arg republish)"
            args="-d $(find eus_vive)/rvizconfig/baxter/baxter_vr_remote_display_visualization.rviz" />
      <node name="$(anon vr_rviz)" pkg="rviz" type="rviz" unless="$(arg republish)"
            args="-d $(find eus_vive)/rvizconfig/baxter/baxter_vr_display_visualization.rviz" />
      <node name="$(anon vis_top_rviz)" pkg="rviz" type="rviz"
            args="-d $(find eus_vive)/rvizconfig/baxter/baxter_top_visualization.rviz" />
      <node name="$(anon vis_front_rviz)" pkg="rviz" type="rviz"
            args="-d $(find eus_vive)/rvizconfig/baxter/baxter_front_visualization.rviz" />
    </group>
    <!--
    <node name="$(anon vis_rviz)" pkg="rviz" type="rviz" unless="$(arg mirror)"
          args="-d $(find eus_vive)/rvizconfig/baxter/baxter_visualization.rviz" />
    -->
  </group>
</launch>
